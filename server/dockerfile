FROM alpine:latest

WORKDIR /app

# Installa GCC, Make e le librerie necessarie (anche se non usiamo make, può servire per altri strumenti)
RUN apk update && \
    apk add --no-cache gcc libc-dev

# Copia tutto il contenuto del progetto nella directory di lavoro
COPY . /app/

# Compila ogni file singolarmente, come da Makefile
RUN gcc -c server.c -o server.o && \
    gcc -c source_file/connessione.c -o connessione.o && \
    gcc -c source_file/impl_server.c -o impl_server.o && \
    gcc -c source_file/gestisci_giocatore.c -o gestisci_giocatore.o && \
    gcc -c source_file/gestisci_partite.c -o gestisci_partite.o && \
    gcc -o server server.o connessione.o impl_server.o gestisci_giocatore.o gestisci_partite.o 

# Espone la porta su cui il server è in ascolto
EXPOSE 10000

# Comando di avvio del container
CMD ["./server"]
